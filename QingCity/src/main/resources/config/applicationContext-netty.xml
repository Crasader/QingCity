<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 导入bean资源 -->
	<import resource="applicationContext-bean.xml" />
	<!-- 加载数据文件 -->
	<context:property-placeholder
		location="src/main/resources/config/properties/settings.properties" ignore-unresolvable="true"/>

	<!-- 初始化Initializer -->
	<bean id="serverInitializer" class="com.qingcity.netty.ServerInitializer"
		init-method="init">
		<property name="timeout" value="${app.channel.readtimeout}" />
		<property name="handlerDispatcher" ref="handlerDispatcher" />
		<property name="requestType" value="${app.requestType}" />
	</bean>

	<!-- Dispathcher 拦截器，抉择执行的handler -->
	<bean id="handlerDispatcher" class="com.qingcity.dispatcher.HandlerDispatcher">
		<property name="messageExecutor">
			<bean class="com.qingcity.domain.FiexThreadPoolExecutor"
				destroy-method="shutdown">
				<constructor-arg value="${app.handler.pool.corePoolSize}" />
				<constructor-arg value="${app.handler.pool.maximumPoolSize}" />
				<constructor-arg value="${app.handler.pool.keepAliveSecond}" />
				<constructor-arg value="${app.handler.pool.name}" />
			</bean>
		</property>
		<property name="sleepTime" value="${app.handler.sleepTime}" />
		<property name="handlerMap" ref="gameHandlerMap" />
	</bean>

	<!-- 不同key 对应不同的 Handler,处理不同的逻辑 -->
	<bean id="gameHandlerMap" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="100" value-ref="userHandler">
				</entry>
				<entry key="101" value-ref="userHandler">
				</entry>
			</map>
		</constructor-arg>
	</bean>
</beans>
